{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","console","log","className","type","placeholder","value","onChange","event","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"uNAgBeA,EAXG,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACIC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEK,uBACXC,EADW,EACXA,KADW,kBAQZA,GARY,2CAAH,sD,MC8CHC,MA/Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAGPC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAGXK,EAAWL,GAEXG,EAAS,IACTM,QAAQC,IAAIN,EAAQA,SANT,2CAAH,sDASZ,OACE,sBAAKO,UAAU,iBAAf,UACE,oBAAIA,UAAU,WAAd,8BACA,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,sBACZC,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAWb,EAASa,EAAMC,OAAOH,QAC3CI,WAAYZ,IAEbF,EAAQe,MACP,sBAAKR,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOP,EAAQgB,OACf,8BAAMhB,EAAQiB,IAAIC,aAEpB,sBAAKX,UAAU,YAAf,UACGY,KAAKC,MAAMpB,EAAQe,KAAKM,MACzB,wCACA,sBAAKd,UAAU,OAAf,UACE,qBACEA,UAAU,YACVe,IAAG,4CAAuCtB,EAAQA,QAAQ,GAAGuB,KAA1D,WACHC,IAAKxB,EAAQA,QAAQ,GAAGyB,cAE1B,4BAAIzB,EAAQA,QAAQ,GAAGyB,2BCrCrCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.683e119e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"5892f0ccde69d54a8c857d322a2094e9\";\r\n\r\nconst fetchWeather = async query => {\r\n  const { data } = await axios.get(URL, {\r\n    params: {\r\n      q: query,\r\n      units: \"metric\",\r\n      APPID: API_KEY\r\n    }\r\n  });\r\n  return data;\r\n};\r\n\r\nexport default fetchWeather;\r\n","import React, { useState } from \"react\";\nimport fetchWeather from \"./api/fetchWeather\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      setWeather(data);\n\n      setQuery(\"\");\n      console.log(weather.weather);\n    }\n  };\n  return (\n    <div className=\"main-container\">\n      <h2 className=\"searchH2\">Search any Place</h2>\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search any place...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n        onKeyPress={search}\n      />\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n            <div className=\"info\">\n              <img\n                className=\"city-icon\"\n                src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                alt={weather.weather[0].description}\n              />\n              <p>{weather.weather[0].description}</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}